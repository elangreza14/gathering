// Code generated by MockGen. DO NOT EDIT.
// Source: gathering.go
//
// Generated by this command:
//
//	mockgen -source gathering.go -destination ../../mock/controller/mock_gathering.go -package controller
//
// Package controller is a generated GoMock package.
package controller

import (
	context "context"
	reflect "reflect"
	time "time"

	dto "github.com/elangreza14/gathering/internal/dto"
	gomock "go.uber.org/mock/gomock"
)

// MockgatheringService is a mock of gatheringService interface.
type MockgatheringService struct {
	ctrl     *gomock.Controller
	recorder *MockgatheringServiceMockRecorder
}

// MockgatheringServiceMockRecorder is the mock recorder for MockgatheringService.
type MockgatheringServiceMockRecorder struct {
	mock *MockgatheringService
}

// NewMockgatheringService creates a new mock instance.
func NewMockgatheringService(ctrl *gomock.Controller) *MockgatheringService {
	mock := &MockgatheringService{ctrl: ctrl}
	mock.recorder = &MockgatheringServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockgatheringService) EXPECT() *MockgatheringServiceMockRecorder {
	return m.recorder
}

// AttendGathering mocks base method.
func (m *MockgatheringService) AttendGathering(arg0 context.Context, arg1 time.Time, arg2 dto.CreateAttendeeReq) (*dto.CreateAttendeeRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AttendGathering", arg0, arg1, arg2)
	ret0, _ := ret[0].(*dto.CreateAttendeeRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AttendGathering indicates an expected call of AttendGathering.
func (mr *MockgatheringServiceMockRecorder) AttendGathering(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AttendGathering", reflect.TypeOf((*MockgatheringService)(nil).AttendGathering), arg0, arg1, arg2)
}

// CreateGathering mocks base method.
func (m *MockgatheringService) CreateGathering(arg0 context.Context, arg1 dto.CreateGatheringReq) (*dto.CreateGatheringRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGathering", arg0, arg1)
	ret0, _ := ret[0].(*dto.CreateGatheringRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateGathering indicates an expected call of CreateGathering.
func (mr *MockgatheringServiceMockRecorder) CreateGathering(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGathering", reflect.TypeOf((*MockgatheringService)(nil).CreateGathering), arg0, arg1)
}
