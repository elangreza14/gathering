basePath: /v1
definitions:
  domain.GatheringType:
    enum:
    - FREE
    - INVITATION
    type: string
    x-enum-varnames:
    - GatheringTypeFREE
    - GatheringTypeINVITATION
  domain.InvitationStatus:
    enum:
    - WAITING
    - ATTEND
    - ABSENT
    type: string
    x-enum-varnames:
    - InvitationStatusWAITING
    - InvitationStatusATTEND
    - InvitationStatusABSENT
  dto.CreateAttendeeReq:
    properties:
      gathering_id:
        type: integer
      member_id:
        type: integer
    required:
    - gathering_id
    - member_id
    type: object
  dto.CreateAttendeeRes:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  dto.CreateGatheringReq:
    properties:
      attendees:
        items:
          type: integer
        type: array
      creator:
        type: string
      location:
        type: string
      name:
        type: string
      schedule_at:
        type: string
      type:
        allOf:
        - $ref: '#/definitions/domain.GatheringType'
        enum:
        - FREE
        - INVITATION
    required:
    - creator
    - location
    - name
    - schedule_at
    type: object
  dto.CreateGatheringRes:
    properties:
      id:
        type: integer
    type: object
  dto.CreateMemberReq:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    required:
    - email
    - first_name
    - last_name
    type: object
  dto.CreateMemberRes:
    properties:
      id:
        type: integer
    type: object
  dto.ErrorField:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
  dto.ErrorResponse:
    properties:
      error: {}
      result:
        type: string
    type: object
  dto.RespondInvitationReq:
    properties:
      attend:
        allOf:
        - $ref: '#/definitions/domain.InvitationStatus'
        enum:
        - ATTEND
        - ABSENT
        - asas
      invitation_id:
        type: integer
      member_id:
        type: integer
    required:
    - invitation_id
    - member_id
    type: object
  dto.SuccessResponse:
    properties:
      data: {}
      error: {}
      result:
        type: string
    type: object
  dto.SuccessResponsePlain:
    properties:
      result:
        type: string
    type: object
host: localhost:5000
info:
  contact:
    email: rezaelangerlangga14@gmail.com
    name: API Support
    url: https://github.com/elangreza14/gathering
  description: This is a sample server Gathering server.
  title: Gathering API
  version: "1.0"
paths:
  /gathering:
    post:
      consumes:
      - application/json
      description: create gathering
      parameters:
      - description: test
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateGatheringReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CreateGatheringRes'
              type: object
        "400":
          description: error validation
          schema:
            allOf:
            - $ref: '#/definitions/dto.ErrorResponse'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/dto.ErrorField'
                  type: array
              type: object
        "500":
          description: error internal
          schema:
            allOf:
            - $ref: '#/definitions/dto.ErrorResponse'
            - properties:
                error:
                  type: string
              type: object
      summary: create gathering
      tags:
      - gathering
  /gathering/invitation:
    post:
      consumes:
      - application/json
      description: create gathering invitation
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAttendeeReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CreateAttendeeRes'
              type: object
        "400":
          description: error validation
          schema:
            allOf:
            - $ref: '#/definitions/dto.ErrorResponse'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/dto.ErrorField'
                  type: array
              type: object
        "500":
          description: error internal
          schema:
            allOf:
            - $ref: '#/definitions/dto.ErrorResponse'
            - properties:
                error:
                  type: string
              type: object
      summary: create gathering invitation
      tags:
      - gathering
  /member:
    post:
      consumes:
      - application/json
      description: create member
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateMemberReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CreateMemberRes'
              type: object
        "400":
          description: error validation
          schema:
            allOf:
            - $ref: '#/definitions/dto.ErrorResponse'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/dto.ErrorField'
                  type: array
              type: object
        "500":
          description: error internal
          schema:
            allOf:
            - $ref: '#/definitions/dto.ErrorResponse'
            - properties:
                error:
                  type: string
              type: object
      summary: create member
      tags:
      - member
  /member/invitation:
    post:
      consumes:
      - application/json
      description: create member
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RespondInvitationReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/dto.SuccessResponsePlain'
        "400":
          description: error validation
          schema:
            allOf:
            - $ref: '#/definitions/dto.ErrorResponse'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/dto.ErrorField'
                  type: array
              type: object
        "500":
          description: error internal
          schema:
            allOf:
            - $ref: '#/definitions/dto.ErrorResponse'
            - properties:
                error:
                  type: string
              type: object
      summary: create member
      tags:
      - member
swagger: "2.0"
